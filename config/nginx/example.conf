# nginx config file for Eclectic Electric WordPress project
#
# Variables that must be replaced:
# PROJECT_DOMAIN - domain to serve, i.e., www.example.com
# DOCUMENT_ROOT - filesystem location of document root,
#     i.e., /var/www/example.com/public

upstream php {
    server unix:/var/run/php/php7.2-fpm.sock;
}

# Expires map for various content types
include snippets/expires.conf;

server {
    server_name PROJECT_DOMAIN;
    root DOCUMENT_ROOT;

    # basic auth
    # auth_basic "Auth Domain";
    # auth_basic_user_file /etc/htpasswd/.htpasswd;

    error_log /var/log/nginx/error-PROJECT_DOMAIN.log;
    access_log /var/log/nginx/access-PROJECT_DOMAIN.log;

    # allow larger posts/uploads
    client_max_body_size 32M;
    
    index index.php;

    # enable expires map
    expires $expires;

    # gzip on;
    include snippets/gzip.conf;

    # no logging for favicon.ico requests
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # use existing robots.txt or send request to WP
    location = /robots.txt {
        try_files $uri $uri/ /index.php?$args;
        allow all;
        log_not_found off;
        access_log off;
    }

    # prevent executing php files inside uploads
    location ~* /wp-content/uploads/.*\.php$ {
        deny all;
    }

    # rewrite for moved WordPress core
    location ~* ^/wp\- {
        if (!-e $request_filename) {
            rewrite ^(/wp-.*)   /wp$1   last;
            rewrite ^(/.*\.php) /wp$1   last;
        }
        if (-d $request_filename) {
            rewrite ^(/wp-.*)   /wp$1/index.php$is_args$args last;
        }
    }

    # managed by WordPress W3 Total Cache plugin
    # include DOCUMENT_ROOT/config/nginx/w3totalcache.conf;

    # no logging for specific file type requests
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        log_not_found off;
        access_log off;
    }

    # if file or directory does not exist, pass request to WordPress
    location / {
        root DOCUMENT_ROOT;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # pass php files to fastcgi
    location ~ \.php$ {
        include fastcgi_params;
        include snippets/fastcgi-php.conf;
        fastcgi_intercept_errors on;
        fastcgi_pass php;
        fastcgi_connect_timeout 3s;
        fastcgi_read_timeout 10s;
    }    

    # don't return apache .htaccess files
    location ~ /\.ht {
        deny all;
    }

}
# ----- end of example.conf -----
